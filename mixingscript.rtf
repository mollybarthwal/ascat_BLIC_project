{\rtf1\ansi\ansicpg1252\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 library(ASCAT)\
setwd("~/Downloads/ascat_intro/")\
\
##germline normal chr10 (i.e. E56_B)\
gl_n10.logR <- read.table("./E56_chr10_neutral/E56_B.LogR", sep = "\\t", header = TRUE)\
gl_n10.BAF <- read.table("./E56_chr10_neutral/E56_B.BAF", sep = "\\t", header = TRUE)\
##cell line normal chr10 (i.e. E56_CL)\
cl_n10.logR <- read.table("./E56_chr10_neutral/E56_CL.LogR", sep = "\\t", header = TRUE)\
cl_n10.BAF <- read.table("./E56_chr10_neutral/E56_CL.BAF", sep = "\\t", header = TRUE)\
##germline deleted chr10 (i.e. E28_B)\
gl_d10.logR <- read.table("./E28_chr10_deletion/E28_B.LogR", sep = "\\t", header = TRUE)\
gl_d10.BAF <- read.table("./E28_chr10_deletion/E28_B.BAF", sep = "\\t", header = TRUE)\
##cell line deleted chr10 (i.e. E28_CL)\
cl_d10.logR <- read.table("./E28_chr10_deletion/E28_CL.LogR", sep = "\\t", header = TRUE)\
cl_d10.BAF <- read.table("./E28_chr10_deletion/E28_CL.BAF", sep = "\\t", header = TRUE)\
\
\
\
\
## Checking the length of chr10  \
min(gl_n10.logR[gl_n10.logR$Chr == "chr10", ]$Position)\
max(gl_n10.logR[gl_n10.logR$Chr == "chr10", ]$Position)\
## rows refers to the position numbers to be replaced, regardless of the sample. \
rows <- which(gl_n10.logR$Chr == "chr10" & gl_n10.logR$Position >= 15029 & gl_n10.logR$Position <= 66910000)\
# subset <- gl_n10.logR[gl_n10.logR$Chr == "chr10",]\
# which(subset$Chr == "chr10" & subset$Position == 18828)\
\
gl_mix.logR <- gl_n10.logR\
gl_mix.BAF <- gl_n10.BAF\
cl_mix.logR <- cl_n10.logR\
cl_mix.BAF <- cl_n10.BAF\
\
gl_mix.logR[rows, ] <- gl_d10.logR[rows, ]\
gl_mix.BAF[rows, ] <- gl_d10.BAF[rows, ]\
cl_mix.logR[rows, ] <- cl_d10.logR[rows, ]\
cl_mix.BAF[rows, ] <- cl_d10.BAF[rows, ]\
\
\
\
##delete the "chr" prefix to run the latest version of ASCAT\
library(dplyr)\
gl_mix.logR <- gl_mix.logR %>% mutate(Chr = sub("chr", "", Chr)) %>% write.table(., "gl_mix.logR", sep = "\\t", quote = F, row.names = F)\
gl_mix.BAF <- gl_mix.BAF %>% mutate(Chr = sub("chr", "", Chr)) %>% write.table(., "gl_mix.BAF", sep = "\\t", quote = F, row.names = F)\
cl_mix.logR <- cl_mix.logR  %>% mutate(Chr = sub("chr", "", Chr)) %>% write.table(., "cl_mix.logR", sep = "\\t", quote = F, row.names = F)\
cl_mix.BAF <- cl_mix.BAF  %>% mutate(Chr = sub("chr", "", Chr)) %>% write.table(., "cl_mix.BAF", sep = "\\t", quote = F,  row.names = F)\
\
library(ASCAT)\
ascat.bc = ascat.loadData(Tumor_LogR_file = "cl_mix.logR", Tumor_BAF_file = "cl_mix.BAF", Germline_LogR_file = "gl_mix.logR", Germline_BAF_file = "gl_mix.BAF", gender = rep('XX',100), genomeVersion = "hg38")\
ascat.plotRawData(ascat.bc, img.prefix = "one_")\
\
## Skipping GC correction at the moment as we don't have the correct ref file \
# ascat.bc = ascat.correctLogR(ascat.bc, GCcontentfile = "GC_example.txt", replictimingfile = "RT_example.txt")\
# ascat.plotRawData(ascat.bc, img.prefix = "After_correction_")\
\
ascat.bc = ascat.aspcf(ascat.bc, out.dir = NA) # penalty=25 for targeted sequencing data\
\
\
ascat.output = ascat.runAscat(ascat.bc) # gamma=1 for HTS data\
save(ascat.bc,ascat.output,file='ASCAT_objects.Rdata')}